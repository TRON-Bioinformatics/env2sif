Bootstrap: docker
From: {docker_name}

%post
  apk --update add \
  bash \
  curl \
  wget \
  ca-certificates \
  libstdc++ \
  glib \
  && wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://raw.githubusercontent.com/sgerrand/alpine-pkg-node-bower/master/sgerrand.rsa.pub \
  && curl -L "https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.23-r3/glibc-2.23-r3.apk" -o glibc.apk \
  && apk add glibc.apk \
  && curl -L "https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.23-r3/glibc-bin-2.23-r3.apk" -o glibc-bin.apk \
  && apk add glibc-bin.apk \
  && curl -L "https://github.com/andyshinn/alpine-pkg-glibc/releases/download/2.25-r0/glibc-i18n-2.25-r0.apk" -o glibc-i18n.apk \
  && apk add --allow-untrusted glibc-i18n.apk \
  && /usr/glibc-compat/bin/localedef -i en_US -f UTF-8 en_US.UTF-8 \
  && /usr/glibc-compat/sbin/ldconfig /lib /usr/glibc/usr/lib \
  && rm -rf glibc*apk /var/cache/apk/*

  apt -y update && apt -y upgrade 
  apt -y install wget build-essential libreadline-gplv2-dev libncursesw5-dev \
    libssl-dev libsqlite3-dev libgdbm-dev libc6-dev libbz2-dev libffi-dev zlib1g-dev
  wget https://www.python.org/ftp/python/{python_version}/Python-{python_version}.tgz
  tar xzf Python-{python_version}.tgz
  cd Python-{python_version}
  ./configure --enable-optimizations
  make altinstall
  ln -s $(find /usr/local/bin -regextype posix-egrep -regex '.*(python[0-9]+\.?[0-9]*)$') /usr/local/bin/python
  ln -s $(find /usr/local/bin -regextype posix-egrep -regex '.*(pip[0-9]+\.?[0-9]*)$') /usr/local/bin/pip
  cat /.singularity.d/env/91-environment.sh
  rm -rf Python-{python_version}.tgz
  rm -rf Python-{python_version}

%test
  echo "SYSTEM INFORMATION:"
  cat /etc/os-release
  echo "\nPYTHON VERSION:"
  python --version
  echo "\nPIP VERSION:"
  pip --version
